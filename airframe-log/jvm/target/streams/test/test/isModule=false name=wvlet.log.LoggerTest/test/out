[0m[[0minfo[0m] [0m[32mLoggerTest:[0m[0m
[0m[[0minfo[0m] [0m[32mlogger[0m[0m
[0m[[0minfo[0m] [0m[32m- should use leaf logger name[0m[0m
[0m[[0minfo[0m] [0m[32m- should have access to root logger[0m[0m
[0m[[0minfo[0m] [0m[32m- should create logger from class[0m[0m
[0m[[0minfo[0m] [0m[32m- should display log messages[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept java.util.logging.LogRecord[0m[0m
[0m[[0minfo[0m] [0m[32m- should support simple log format[0m[0m
[0m[[0minfo[0m] [0m[32m- should support app log format[0m[0m
[0m[[0minfo[0m] [0m[32m- should support source code log format[0m[0m
[0m[[0minfo[0m] [0m[32m- should support intellij format[0m[0m
[0m[[0minfo[0m] [0m[32m- should support tsv format[0m[0m
[0m[[0minfo[0m] [0m[32m- should can create local logger[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to change log levels[0m[0m
[0m[[0minfo[0m] [0m[32m- should support logging methods[0m[0m
[0m[[0minfo[0m] [0m[32m- should display exception stack traces[0m[0m
[0m[[0minfo[0m] [0m[32m- should support having a concrete logger[0m[0m
[0m[[0minfo[0m] [0m[32m- should use succinct name when used with anonymous trait[0m[0m
[0m[[0minfo[0m] [0m[32m- should Remove $ from object name[0m[0m
[0m[[0minfo[0m] [0m[32mLogLevel[0m[0m
[0m[[0minfo[0m] [0m[32m- should support java.util.LogLevel[0m[0m
[0m[[0minfo[0m] [0m[32m- should parse string log levels[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to sort LogLevels[0m[0m
[0m[[0minfo[0m] [0m[32mConsoleLogHandler[0m[0m
[0m[[0minfo[0m] [0m[32m- should support flush and close[0m[0m
